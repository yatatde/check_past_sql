
A tool on sql scripts check.
===============================================================

1. Installation pre-requisites: 

	1. Python Release for Windows
	https://www.python.org/downloads/windows/
	2. Sqlite
	3. Downloaded current project	
	4. (Optional)DB Browser for SQLite
===============================================================

Introduction:
2. Check existing main inputs of this project:

A. Open \sources\control\Qsettings.py to check Enum classes with settings:
		class Qsysargv_list(Enum):
		# <launch parameter> | <name of query>
		# under customization
		one  = "gengrants"
		two  = "overgroup"

		class Qtabs_list(Enum):
		# <name of query> | list of <name of table accessing in query>
		# under customization
		gengrants  = ["SYSDUMMY1","SYSTABLES","SYSTABAUTH"]
		overgroup  = ["CUSTGOODS"]
		
B. Open sources\sqlscripts to check queries used for tables creation and data loading   
		\<name of query>_create_tabs_<name of table accessing in query>
		\<name of query>_load_tabs_<name of table accessing in query>

C. Open sources\work to check query content available for test and relevant generated test result example :
		<name of query>_query.sql 
		<name of query>_result.txt
==================================================================

3. Customization.

In case of new test query adding: 
A. Fullfill \sources\control\Qsettings.py with needed data like "one" parameter and "gengrants" query name as well as tables list - see 2.A. instruction point
B. Add needed inputs for tables creation \ data loading in sources\sqlscripts.
   Important: the scripts names must be composed with <name of query> , <name of table accessing in query> like it for previous ones - see instruction 2.B point
C. Add needed input for test query.
   Important: the script name must be composed with <name of query> like it for previous ones - see instruction 2.C. point

==================================================================
4. Running.

A. Launch command 
		...\check_past_sql> py main.py one 
		or another command 
							 py main.py <launch parameter>
		with releveant <launch parameter> corresponding customization done (see instruction 3.(A..C) point) 
B. Check output result in sources\work\<name of query>_result.txt file. 
	Note: In case of needs the created database \dbs\<query name>.dbs can be used for tests from other DB IDE (for instance, DB Browser for SQLite)  




		
		
		
		
